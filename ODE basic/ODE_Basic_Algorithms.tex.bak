\documentclass[10pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{graphicx}
\title{ODE-Basic Algorithms}
\begin{document}
\maketitle


\section{Euler Method}

\subsection{Forward Derivative}


\begin{enumerate}
\item The formal definition of the derivative is,

$$ f^{'}(t) = lim_{\tau\rightarrow0} \frac{f(t+\tau)-f(t)}{\tau}$$

\item From the definition of Taylor's theorem, we can write:

$$ f^{'}(t) = \frac{f(t+\tau)-f(t)}{\tau} -\frac{1}{2} \tau f^{''}(\zeta)$$

where $t \leq \zeta \leq t+\tau$. This is the \emph{right derivative} or \emph{forward derivative formula}. The last term is the truncation error which is of the order of $\tau$ here.
\end{enumerate}


\subsection{Euler's Method}

Consider the equations of motion here, which I want to solve numerically,

$$ \frac{d \textbf{v}}{dt} = \textbf{a}(\textbf{r},\textbf{v})$$

$$\frac{d\textit{r}}{dt} = \textbf{v}$$

Using the forward derivative equation, we can write these as,

\begin{align*}
\textbf{v}(t+\tau)&= \textbf{v}(t) + \tau\textbf{a}(\textbf{r}(t),\textbf{v}(t))+\mathcal{O}(\tau^{2})\\
\textbf{r}(t+\tau) &= \textbf{r}(t) + \tau\textbf{v}(t) + \mathcal{O}(\tau^{2})
\end{align*}



Our notation will be,
$f_n = f(t_n)$,
$t_n = (n-1)\tau $

The Euler method equations become,

\begin{align*}
\textbf{v}_{n+1}&=\textbf{v}_{n}+\tau \textbf{a}_{n}\\
\textbf{r}_{n+1}&= \textbf{r}_{n} + \tau \textbf{v}_{n}
\end{align*}


\subsection{Euler-Cromer Method}

Instead of $ v_{n} $ in the quation, we put the modified $v_{n+1}$

\begin{align*}
\textbf{v}_{n+1}&=\textbf{v}_{n}+\tau \textbf{a}_{n}\\
\textbf{r}_{n+1}&= \textbf{r}_{n} + \tau \textbf{v}_{n+1}
\end{align*}

The truncation is still of $\mathcal{O(\tau^{2})}$.

\subsection{Midpoint Method}

We can have the midpoint of velocities between vn and vn+1

\begin{align*}
\textbf{v}_{n+1}&=\textbf{v}_{n}+\tau \textbf{a}_{n}\\
\textbf{r}_{n+1}&= \textbf{r}_{n} + \tau \frac{ \textbf{v}_{n+1} +\textbf{v}_{n}}{2}
\end{align*}

Plugging the velcoity equation into the position equation, we see that

$$ \textbf{r}_{n+1} = \textbf{r}_{n} + \tau \textbf{v}_{n} + \frac{1}{2} \textbf{a}_{n} \tau^{2}$$

The order is $\mathcal{O}(\tau^{3})$



global error = $ N_{\tau}$ x (local error) = (T/$ \tau $)$ \mathcal{O}(\tau^{n}) = T\mathcal{O}(\tau^{n-1})$

\section*{Centered derivative formulas}

The Euler Method was based on the right derivative formulation for df.dt. Now we can use the centered derivative formula on ODE algorithms.

$$ f^{'}(t) = \lim_{\tau \rightarrow 0} \frac{f(t+\tau)-f(t-\tau)}{2 \tau}$$

Using the taylor series expansion of $ f(t+\tau) $ and $ f(t-\tau)$, we ger

$$f^{'}(t) = \frac{f(t+\tau)-f(t-\tau)}{2 \tau} - \frac{1}{6} \tau^{2} f^{3}(\zeta)$$

where $ t-\tau \leq \zeta \leq t+\tau $.

In this \emph{centered first derivative approximation} the truncation error is now quadratic in $\tau$, which is better when compared to the basi Euler algorithm.

We also see that, we can build the second derivative in a similar fashion

$$
f^{''}(t) = \frac{f(t+\tau)-f(t-\tau)-2f(t)}{\tau^2} - \frac{1}{12} \tau^{2} f^{4}(\zeta)
$$ where$ t-\tau \leq \zeta \leq t+\tau $.


\subsection*{Leap-Frog method}

Starting from the equations of motion,

\begin{align*}
\frac{d\textbf{v}}{dt}&= \textbf{a}(\textbf{r}(t))\\
\frac{d\textbf{r}}{dt}&= \textbf{v}(t)
\end{align*}

Now,

$$\frac{\textbf{v}(t+\tau)-\textbf{v}(t-\tau)}{2 \tau} + \mathcal{O}(\tau^{2}) = \textbf{a}(\textbf{r}(t))$$

For position, we are centering it between $ t+2\tau $ and $ t $. The reason will be apparent soon.

$$\frac{\textbf{r}(t+2 \tau)-\textbf{r}(t-\tau)}{2 \tau} + \mathcal{O}(\tau^{2}) = \textbf{v}(t+\tau)$$

Rearranging the terms and using our previous notation,

\begin{align*}
\textbf{v}_{n+1}&=\textbf{v}_{n-1} + 2\tau a(\textbf{r}_n) + \mathcal{O}(\tau^{3})\\
\textbf{r}_{n+2}&=\textbf{r}_{n} + 2\tau \textbf{v}_{n+1} + \mathcal{O}(\tau^{3})
\end{align*}

We are advancing in steps of $2\tau$ hence the name 'leap-frog'.


\subsection*{Verlet Method}

Using the central difference formulas for first and second derivatives, we have

\begin{align*}
\frac{r_{n+1} - r_{n-1}}{2 \tau} + \mathcal{O}(\tau^{2})&=v_n\\
\frac{r_{n+1} - r_{n-1} - 2r_n}{\tau^{2}} + \mathcal{O}(\tau^{2})&=a_n
\end{align*}

Rearranging terms,

\begin{align*}
\textbf{v}_{n}&= \frac{\textbf{r}_{n+1}-\textbf{r}_{n-1}}{2 \tau} + \mathcal{0}(\tau^2)\\
\textbf{r}_{n+1}&= 2 \textbf{r}_{n} - \textbf{r}_{n-1} + \tau^{2} \textbf{a}_{n} + \mathcal{O}(\tau^{4})
\end{align*}

The truncation error is of the fourth order which is a great improvement compared to other methods.






\end{document}